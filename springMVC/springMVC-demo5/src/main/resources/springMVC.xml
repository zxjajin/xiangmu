<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--开启自动扫描注解-->
    <context:component-scan base-package="com.ajin.mvc"></context:component-scan>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--视图控制器-->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>

    <!--开启静态资源访问-->
    <mvc:default-servlet-handler/>
    <!--开启MVC的注解驱动-->
    <mvc:annotation-driven/>

    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <!--id必须为multipartResolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!--配置拦截器-->
    <mvc:interceptors>

        <ref bean="firstInterceptor"></ref>
        <ref bean="secondInterceptor"></ref>

        <!--这样配置对所有请求进行拦截-->
<!--        <bean class="com.ajin.mvc.interceptors.FirstInterceptor"></bean>-->
<!--        <ref bean="firstInterceptor"></ref>-->
        <!-- 以上两种配置方式都是对DispatcherServlet所处理的所有的请求进行拦截 -->


        <!--下面可以自行配置规则-->
      <!--  <mvc:interceptor>
            &lt;!&ndash;/*拦截上下文路径下一层目录下的所有请求&ndash;&gt;
            &lt;!&ndash;/**拦截所有请求&ndash;&gt;
            <mvc:mapping path="/**"/>
            &lt;!&ndash;排除/请求&ndash;&gt;
            <mvc:exclude-mapping path="/"/>
            <ref bean="firstInterceptor"></ref>
        </mvc:interceptor>-->
        <!-- 以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，通过mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求-->
    </mvc:interceptors>

    <!--配置异常处理-->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        &lt;!&ndash;配置出现异常跳转的页面&ndash;&gt;-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--                &lt;!&ndash;可能出现的异常配置到key跳转到error.html&ndash;&gt;-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--        &lt;!&ndash;设置将异常信息共享在请求域中的键&ndash;&gt;-->
<!--        <property name="exceptionAttribute" value="ex"></property>-->
<!--    </bean>-->
</beans>